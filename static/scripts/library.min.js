var Library=function(){var e=this;e.dataType={lectures:{id:"number",title:"string",school:"object",author:"object",date:"string",time:"string",place:"number",isOver:"boolean",resources:"string"},schools:{id:"number",title:"string",student:"number"},authors:{id:"number",title:"string",description:"string",photo:"string"},places:{id:"number",title:"string",address:"string",link:"string",capacity:"number"}},e.data={lectures:[{id:0,title:"Лекция 1. Адаптивная вёрстка",school:[0,1],author:[1],date:"2016/10/20",time:"14:00",place:0,isOver:!1,resources:"#"},{id:1,title:"Лекция 2. Работа с сенсорным пользовательским вводом",school:[0],author:[1],date:"2016/10/27",time:"14:00",place:1,isOver:!1,resources:"#"},{id:2,title:"Лекция 3. Мультимедиа: возможности браузера",school:[0],author:[2],date:"2016/11/3",time:"14:00",place:2,isOver:!1,resources:"#"},{id:3,title:"Лекция 4. Нативные приложения на веб-технологиях",school:[0],author:[3],date:"2016/11/10",time:"14:00",place:0,isOver:!1,resources:"#"},{id:4,title:"Лекция 5. Клиентская оптимизация: базовые знания и лучшие практики",school:[0],author:[4],date:"2016/11/17",time:"14:00",place:1,isOver:!1,resources:"#"},{id:5,title:"Лекция 6. Клиентская оптимизация: мобильные устройства и инструменты",school:[0],author:[5],date:"2016/11/24",time:"14:00",place:2,isOver:!1,resources:"#"},{id:6,title:"Лекция 7. Инфраструктура веб-проектов",school:[0],author:[6],date:"2016/12/1",time:"14:00",place:0,isOver:!1,resources:"#"},{id:7,title:"Лекция 8. Инструменты разработки мобильного фронтенда",school:[0],author:[6],date:"2016/12/1",time:"16:00",place:2,isOver:!1,resources:"#"},{id:8,title:"Лекция 1. Java Blitz (Часть 1)",school:[1],author:[7],date:"2016/10/19",time:"14:00",place:1,isOver:!0,resources:"#"},{id:9,title:"Лекция 2. Git & Workflow",school:[0,1],author:[8],date:"2016/10/19",time:"16:00",place:1,isOver:!1,resources:"#"},{id:10,title:"Лекция 3. Java Blitz (Часть 2)",school:[1],author:[7],date:"2016/10/25",time:"14:00",place:2,isOver:!1,resources:"#"},{id:11,title:"MyFirstApp (Часть 1)",school:[1],author:[9],date:"2016/10/25",time:"16:00",place:1,isOver:!1,resources:"#"},{id:12,title:"Лекция 5. MyFirstApp (Часть 2)",school:[1],author:[9],date:"2016/11/2",time:"14:00",place:2,isOver:!1,resources:"#"},{id:13,title:"Лекция 6. ViewGroup",school:[1],author:[10],date:"2016/11/2",time:"16:00",place:1,isOver:!1,resources:"#"},{id:14,title:"Лекция 7. Background",school:[1],author:[11],date:"2016/11/9",time:"14:00",place:0,isOver:!1,resources:"#"},{id:15,title:"Лекция 8. RecyclerView",school:[1],author:[12],date:"2016/11/9",time:"16:00",place:1,isOver:!1,resources:"#"},{id:16,title:"Лекция 9. Service & Broadcasts",school:[1],author:[11],date:"2016/11/16",time:"14:00",place:0,isOver:!1,resources:"#"},{id:17,title:"Лекция 10. Drawing",school:[1],author:[10],date:"2016/11/16",time:"16:00",place:2,isOver:!1,resources:"#"},{id:18,title:"Лекция 11. Content provider",school:[1],author:[13],date:"2016/11/23",time:"14:00",place:0,isOver:!1,resources:"#"},{id:19,title:"Лекция 12. SQL&SQLite",school:[1],author:[13],date:"2016/11/23",time:"16:00",place:1,isOver:!1,resources:"#"},{id:20,title:"Лекция 13. Fragments (Часть 1)",school:[1],author:[14],date:"2016/11/30",time:"14:00",place:2,isOver:!1,resources:"#"},{id:21,title:"Лекция 14. Fragments (Часть 2)",school:[1],author:[14],date:"2016/11/30",time:"16:00",place:2,isOver:!1,resources:"#"},{id:22,title:"Лекция 15. MVP&Co",school:[1],author:[15],date:"2016/12/7",time:"14:00",place:0,isOver:!1,resources:"#"},{id:23,title:"Лекция 16. Debugging & Polishing",school:[1],author:[16],date:"2016/12/14",time:"14:00",place:2,isOver:!1,resources:"#"},{id:24,title:"Лекция 1. Идея, исследование, концепт (Часть 1)",school:[2],author:[0],date:"2016/10/18",time:"14:00",place:0,isOver:!1,resources:"#"},{id:25,title:"Лекция 2. Идея, исследование, концепт (Часть 2)",school:[2],author:[0],date:"2016/10/18",time:"16:00",place:1,isOver:!1,resources:"#"},{id:26,title:"Лекция 3. Особенности проектирования мобильных интерфейсов",school:[2],author:[17],date:"2016/10/25",time:"14:00",place:2,isOver:!1,resources:"#"},{id:27,title:"Лекция 4. Продукт и платформа",school:[2],author:[18],date:"2016/11/1",time:"14:00",place:0,isOver:!0,resources:"#"},{id:28,title:"Лекция 5. Природа операционных систем",school:[2],author:[17],date:"2016/11/1",time:"16:00",place:0,isOver:!1,resources:"#"},{id:29,title:"Лекция 6. Прототипирование как процесс",school:[2],author:[19,20],date:"2016/11/8",time:"14:00",place:1,isOver:!1,resources:"#"},{id:30,title:"Лекция 7. Инструмент под задачи",school:[2],author:[19,20],date:"2016/11/8",time:"16:00",place:1,isOver:!1,resources:"#"},{id:31,title:"Лекция 8. Анимации",school:[2],author:[19,20],date:"2016/11/15",time:"14:00",place:2,isOver:!1,resources:"#"},{id:32,title:"Дополнительная лекция. Design Everything",school:[2],author:[21,22],date:"2016/11/15",time:"16:00",place:2,isOver:!1,resources:"#"},{id:33,title:"Лекция 9. Развите продукта",school:[2],author:[23],date:"2016/11/22",time:"14:00",place:0,isOver:!1,resources:"#"},{id:34,title:"Лекция 10. Исследование интерфейсов",school:[2],author:[24],date:"2016/11/29",time:"14:00",place:1,isOver:!1,resources:"#"},{id:35,title:"Лекция 11. Работа в команде",school:[1,2],author:[25],date:"2016/12/6",time:"14:00",place:1,isOver:!1,resources:"#"},{id:36,title:"Дополнительная лекция. Айдентика",school:[2],author:[26,27],date:"2016/12/13",time:"14:00",place:2,isOver:!1,resources:"#"}],schools:[{id:0,title:"Школа разработки интерфейсов",student:30},{id:1,title:"Школа мобильной разработки",student:25},{id:2,title:"Школа мобильного дизайна",student:28}],authors:[{id:0,title:"Антон Тен",description:"В Яндексе с 2014 года. Ведущий дизайнер продукта в сервисах Переводчик, Расписания и Видео.",photo:"/images/vis-author-0.jpg"},{id:1,title:"Дмитрий Душкин",description:"Кандидат технических наук, научный сотрудник ИПУ РАН с 2008 по 2013. Пришёл в Яндекс.Картинки в 2014 году, отвечал за мобильную версию и рост производительности сервиса. В 2016 перешёл в Yandex Data Factory, где разрабатывает интерфейсы и дизайн веб-приложений для B2B.",photo:"/images/vis-author-1.jpg"},{id:2,title:"Максим Васильев",description:"Во фронтенд-разработке с 2007 года. До 2013-го, когда пришёл в Яндекс, работал технологом в студии Лебедева и других компаниях.",photo:"/images/vis-author-2.jpg"},{id:3,title:"Сергей Бережной",description:"Веб-разработчик в Яндексе с 2005 года. Успел поработать над Поиском, Почтой, Поиском по блогам, Я.ру, Картинками, Видео. Помимо этого, активно занимается развитием внутренних инструментов для создания сайтов.",photo:"/images/vis-author-3.jpg"},{id:4,title:"Андрей Морозов",description:"Окончил радиофизический факультет Киевского Национального Университета. Автор трёх патентных заявок. В Яндексе с 2014 года, разрабатывает интерфейсы Яндекс.Карт.",photo:"/images/vis-author-4.jpg"},{id:5,title:"Иван Карев",description:"Окончил факультет ВМК (вычислительной математики и кибернетики) МГУ им. М.В. Ломоносова, занимается веб-программированием с 2007 года. Сначала делал админки для системы фильтрации трафика, затем — интерфейсы онлайн-карт для проекта Космоснимки. В Яндексе начинал с Народа и Я.ру, последние два года занимался главной страницей. В настоящее время специализируется на вопросах производительности: от серверного JS до оптимизации загрузки страницы на клиенте.",photo:"/images/vis-author-5.jpg"},{id:6,title:"Прокопюк Андрей",description:"В 2008 году впечатлился веб-разработкой из-за скорости воплощения идей и лёгкость их донесения до пользователей. В Яндексе с 2014 года, разрабатывает страницу поисковой выдачи. Любит сложные задачи, интересуется аналитикой, тестированием и новыми способами автоматизировать рутину.",photo:"/images/vis-author-6.jpg"},{id:7,title:"Эдуард Мацуков",description:"Разрабатываю приложения для Android с 2010 года. В 2014 делал высоконагруженное финансовое приложение. Тогда же начал осваивать АОП, внедряя язык в продакшн. В 2015 разрабатывал инструменты для Android Studio, позволяющие использовать aspectJ в своих проектах. В Яндексе занят на проекте Авто.ру.",photo:"/images/vis-author-7.jpg"},{id:8,title:"Дмитрий Складнов",description:"Окончил факультет ИТ Московского Технического Университета. В Яндексе с 2015 года, разрабатывает приложение Auto.ru для Android.",photo:"/images/vis-author-8.jpg"},{id:9,title:"Роман Григорьев",description:"Окончил Самарский университет. Разрабатывает приложения для Android с 2010 года. В Яндексе — с 2012-го. Руководит разработкой мобильных клиентов Яндекс.Диска.",photo:"/images/vis-author-9.jpg"},{id:10,title:"Алексей Щербинин",description:"Профессионал с глубокими познаниями в графической части Android и всего, что с ней связано. Любит нестандартные задачи и решает их в команде мобильного Яндекс Браузера.",photo:"/images/vis-author-10.jpg"},{id:11,title:"Алексей Макаров",description:"Выпускник Московского Института Электронной Техники. Android- и Python-разработчик. В команде мобильного Яндекс.Браузера с 2015 года.",photo:"/images/vis-author-11.jpg"},{id:12,title:"Владимир Тагаков",description:"Энтузиаст разработки под Android, в Яндексе занимается оптимизацией и разработкой мобильного приложения Карт.",photo:"/images/vis-author-12.jpg"},{id:13,title:"Максим Хромцов",description:"Учится в магистратуре на факультете информатики и вычислительной техники Московского института радиотехники, электроники и автоматики. С 2005 года занимается разработкой приложений (игры, бизнес-приложения) для мобильных устройств на платформах J2ME, Windows Mobile, Android, Symbian, участвовал в разработке веб-приложений на Java EE. В Яндексе с 2010 года, занимается разработкой для мобильных устройств на платформах J2ME и Android.",photo:"/images/vis-author-13.jpg"},{id:14,title:"Денис Загаевский",description:"Окончил факультет ВМК МГУ им. Ломоносова. Занимается разработкой приложений и игр с 2011 года, в 2012-м сконцентрировался на мобильных платформах Android и iOS. В Яндексе разрабатывает приложения для Android.",photo:"/images/vis-author-14.jpg"},{id:15,title:"Дмитрий Попов",description:"Окончил факультет ПМТ Вятского государственного университета в 2012 году. В Яндексе с 2015-го, занимается разработкой продуктов медийных сервисов.",photo:"/images/vis-author-15.jpg"},{id:16,title:"Илья Сергеев",description:"Разрабатывает приложения под мобильные платформы с 2009 года. За это время принял участие более чем в 30 законченных проектах под Android, iOS, и Windows Phone. В Яндексе с 2015 года, занимается разработкой КиноПоиска под Android и iOS.",photo:"/images/vis-author-16.jpg"},{id:17,title:"Васюнин Николай",description:"Пришёл в Яндекс в 2014 году. Дизайнер продукта в музыкальных сервисах компании, участник команды разработки Яндекс.Радио.",photo:"/images/vis-author-17.jpg"},{id:18,title:"Сергей Калабин",description:"Пришёл в компанию дизайнером мобильных приложений в 2013-м. Три года занимался музыкальными сервисами Яндекса, сейчас руководит дизайном турецкого направления. Считает что дизайнера должна отличать любовь к людям.",photo:"/images/vis-author-18.jpg"},{id:19,title:"Сергей Томилов",description:"Серёжа: Профессионально занимается дизайном с 2009 года. В 2010 году переключился на работу исключительно над интерфейсами, по большей части мобильными. В Яндекс пришёл в 2011 году. Участвовал в создании разных продуктов Поиска, Диска, Фоток и Музыки для всех популярных платформ.",photo:"/images/vis-author-19.jpg"},{id:20,title:"Дарья Старицына",description:"Дизайнер мобильных продуктов. До прихода в компанию занималась интерфейсами мобильных игр. В Яндексе делает Браузер под все платформы. Также успела поработать над экспериментальными голосовыми интерфейсами и мобильной версией главной страницы Яндекса.",photo:"/images/vis-author-20.jpg"},{id:21,title:"Rijshouwer Krijn",description:"Krijn Rijshouwer is a product designer. “I like to create and work on products that have a positive impact in the world. The thing that attracts me most in doing what I do at Framer, and did before at other companies, is changing the way a lot of people work, live and consume on a daily basis with just the push of a button.",photo:"/images/vis-author-21.jpg"},{id:22,title:"Treub Jonas",description:"Jonas Treub is a software developer. “I am a creative software developer with experience working on a variety of projects, from small prototypes to large apps for some well-known Dutch clients.”",photo:"/images/vis-author-22.jpg"},{id:23,title:"Андрей Гевак",description:"В конце 2013 года команда сервиса Яндекс.Музыка начала разработку новой версии. Новой получилась не только «шкурка», то есть дизайн, но и сами возможности. Мы переосмыслили поведение пользователей на сайте и в приложении и иначе оценили потребность людей в новой музыке. В результате этого получилась нынешняя версия music.yandex.ru и её мобильные клиенты. В докладе я расскажу о том, как шёл процесс переосмысления, почему мы сделали именно так, как сделали, и что из этого всего вышло.",photo:"/images/vis-author-23.jpg"},{id:24,title:"Кондратьев Александр",description:"Занимается исследованиями интерфейсов в Яндексе больше 5 лет. За это время поработал с десятками продуктов Поиска, Карт, Маркета, Почты и других сервисов компании. Заинтересовался интерфейсами в 2005 году, по образованию специалист по защите информации.",photo:"/images/vis-author-24.jpg"},{id:25,title:"Юрий Подорожный",description:"Руководитель службы разработки мобильных геоинформационных сервисов «Яндекса». Работает над «Яндекс.Картами» и «Яндекс.Метро». Занимается мобильной разработкой более восьми лет.",photo:"/images/vis-author-25.jpg"},{id:26,title:"Дмитрий Моруз",description:"Работал дизайнером в студии «Трансформер», с 2014 года — дизайнер систем идентификации в Яндексе.",photo:"/images/vis-author-26.jpg"},{id:27,title:"Ждан Филиппов",description:"Арт-директор коммуникаций Яндекса. В прошлом — арт-директор журналов «CitizenK», «Эрмитаж», «Секрет Фирмы», «Top-Flight», сотрудник «Мастерской Димы Барбанеля». Занимался макетной работой для компаний Readymag, Aliexpress, ONY, Charmer, MINI, Grohe и Мосметрострой.",photo:"/images/vis-author-27.jpg"}],places:[{id:0,title:"Синий кит",address:"ул. Льва Толстого, 16",link:"https://maps.yandex.by/-/C6EciCja",capacity:60},{id:1,title:"Зеленая комната",address:"ул. Льва Толстого, 16",link:"https://maps.yandex.by/-/C6EciCja",capacity:40},{id:2,title:"Красный шар",address:"ул. Льва Толстого, 16",link:"https://maps.yandex.by/-/C6EciCja",capacity:50}]},e.loadData=function(){var t=JSON.parse(localStorage.getItem("schedule"));t||e.updateLocalStorage(e.data)},e.getSchedule=function(t,i,r){return new Promise(function(o,s){e.select(["lectures","schools","authors","places"]).then(function(s){s.lectures=e.sort(s.lectures.filter(function(e){var o=new Date(e.date).getTime(),s=new Date(t).getTime()||0,a=new Date(i).getTime()||1/0,n=!1;return n="number"==typeof r?o>=s&&o<=a&&r===e.place:o>=s&&o<=a})),o(s)})})},e.getLecture=function(t){return new Promise(function(i,r){e.select(["lectures"]).then(function(e){var r=[];r="number"==typeof t?e.lectures.filter(function(e){return e.id===t}):e.lectures.slice(),i(r)})})},e.getSchool=function(t){return new Promise(function(i,r){e.select(["schools"]).then(function(e){var r=[];r="number"==typeof t?e.schools.filter(function(e){return e.id===t}):e.schools.slice(),i(r)})})},e.getAuthor=function(t){return new Promise(function(i,r){e.select(["authors"]).then(function(e){var r=[];r="number"==typeof t?e.authors.filter(function(e){return e.id===t}):e.authors.slice(),i(r.length>0?r:[{title:"Лектор с идентификатором "+t+"не найден."}])})})},e.getPlace=function(t){return new Promise(function(i,r){e.select(["places"]).then(function(e){var r=[];r="number"==typeof t?e.places.filter(function(e){return e.id===t}):e.places.slice(),i(r.length>0?r:[{title:"Место с идентификатором "+t+"не найдено."}])})})},e.sort=function(e){return e.sort(function(e,t){var i=new Date(e.date+" "+e.time).getTime(),r=new Date(t.date+" "+t.time).getTime();return i>r?1:-1})},e.expand=function(e,t,i){var r=[];return e.length>0&&t.data.length>0&&(r=e.map(function(e){var r=t.data.filter(function(t){return t.id===e});try{return r[0][i]}catch(o){return console.log("Запрашиваемый элемент с id = "+e+" не найден таблице "+t.title+". \n"+o.name+": "+o.message+"\n"+o.stack),""}})),r.join(", ")},e.validate=function(e,t,i){for(var r in i[e]){if(!i[e].hasOwnProperty(r)||!t.hasOwnProperty(r))return{type:"error",msg:"Указано некорректное поле для таблицы "+e+"."};if(void 0===t[r]||typeof t[r]!==i[e][r])return{type:"error",msg:"Указан некорректный тип данных для поля "+r+" в таблице "+e+"."};if("string"===i[e][r]&&0===t[r].length)return{type:"error",msg:"Указан некорректный тип данных для поля "+r+" в таблице "+e+"."};if("number"===i[e][r]&&isNaN(t[r]))return{type:"error",msg:"Указан некорректный тип данных для поля "+r+" в таблице "+e+"."};if("school"===r&&!t[r].length)return{type:"error",msg:"Указан некорректный тип данных для поля "+r+" в таблице "+e+"."};if("author"===r&&!t[r].length)return{type:"error",msg:"Указан некорректный тип данных для поля "+r+" в таблице "+e+"."};if("date"===r&&!t[r].match(/^(\d{4})\/(0[1-9]|1[0-2])\/(0[1-9]|[12]\d|3[01])$/))return{type:"error",msg:"Указан некорректный тип данных для поля "+r+" в таблице "+e+"."};if("time"===r&&!t[r].match(/^(\d{2})\:(\d{2})$/))return{type:"error",msg:"Указан некорректный тип данных для поля "+r+" в таблице "+e+"."}}return{type:"success",msg:"Данные корректны."}},e.correct=function(e,t,i){var r={type:!0,msg:""};return"lectures"!==t||(e[t].forEach(function(t){var o=0,s=0;t.place===i.place&&new Date(t.date+" "+t.time).getTime()===new Date(i.date+" "+i.time).getTime()&&(r.type=!1,r.msg="В одной аудитории не может быть одновременно двух разных лекций."),i.school.forEach(function(s){e.schools.forEach(function(e){e.id===s&&(o+=e.student)}),t.school.indexOf(s)!==-1&&new Date(t.date+" "+t.time).getTime()===new Date(i.date+" "+i.time).getTime()&&(r.type=!1,r.msg="Для одной школы не может быть двух лекций одновременно.")}),e.places.forEach(function(e){e.id===i.place&&(s=e.capacity)}),o>s&&(r.type=!1,r.msg="Вместимость аудитории должна быть больше или равной количеству студентов на лекции.")}),r.type)?{type:"success",msg:"Данные корректны."}:{type:"error",msg:r.msg}},e.select=function(t){return new Promise(function(i,r){e.query().then(function(e){var r={};t.forEach(function(t){if(!e.hasOwnProperty(t))throw new Error("Не удалось получить данные для таблицы "+t+".");r[t]=e[t]}),i(r)})})},e.update=function(t,i){return new Promise(function(r,o){e.query().then(function(s){if(s.hasOwnProperty(t)&&e.dataType[t]){var a=e.validate(t,i,e.dataType);if("error"===a.type)return o(a.msg),!1;if(isCorrect=e.correct(s,t,i),"error"===isCorrect.type)return o(isCorrect.msg),!1;s[t]=s[t].map(function(e){return e.id===i.id&&(e=i),e}),e.updateLocalStorage(s),r("Данные в таблице "+t+" изменены.")}else o("Не удалось получить данные для таблицы "+t+".")})})},e.insert=function(t,i){return new Promise(function(r,o){e.query().then(function(s){if(s.hasOwnProperty(t)&&e.dataType[t]){i.id=s[t].length>=1?s[t][s[t].length-1].id+1:0;var a=e.validate(t,i,e.dataType);if("error"===a.type)return o(a.msg),!1;if(isCorrect=e.correct(s,t,i),"error"===isCorrect.type)return o(isCorrect.msg),!1;s[t].push(i),e.updateLocalStorage(s),r("Данные добавлены в таблицу "+t+".")}else o("Не удалось получить данные для таблицы "+t+".")})})},e["delete"]=function(t,i){return new Promise(function(r,o){e.query().then(function(s){if(s.hasOwnProperty(t)&&e.dataType[t]){var a=s[t].length,n=0;s[t]=s[t].filter(function(e){return e.id!==i.id}),n=s[t].length,n<a?(e.updateLocalStorage(s),r("Данные успешно удалены из таблицы "+t+".")):o("Не удалось найти данные с id "+i.id+" в таблице "+t+".")}})})},e.query=function(){return new Promise(function(e,t){var i=JSON.parse(localStorage.getItem("schedule"));i?e(i):t(new Error("Не удалось получить данные."))})},e.updateLocalStorage=function(e){var e=JSON.stringify(e);localStorage.setItem("schedule",e)},e.importDefaults=function(){e.body=app.modules.main.body},e.init=function(){e.importDefaults(),e.loadData()}};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
