!function(){if(!("modules"in app&&"admin"in app.modules)){var e=function(){var e=this;e.container=document.querySelector(".admin"),e.aside=e.container.querySelector(".admin__aside"),e.setupListener=function(){e.aside.addEventListener("click",e.handleAsideClick)},e.handleAsideClick=function(t){t.preventDefault();var n=t.target,a=n.tagName,r="";activeBox="",id="","A"===a&&(id=n.getAttribute("href"),r=e.aside.querySelector(".admin__aside__link_state_active"),activeBox=e.container.querySelector(".admin__box_state_active"),r&&r.classList.remove("admin__aside__link_state_active"),activeBox&&activeBox.classList.remove("admin__box_state_active"),n.classList.add("admin__aside__link_state_active"),e.container.querySelector(id).classList.add("admin__box_state_active"))},e.alert=function(e){alert(e.text)},e.importDefaults=function(){e.body=app.modules.main.body},e.init=function(){e.container&&(e.importDefaults(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.admin=new e}}(),function(){if(!("modules"in app&&"adminAuthors"in app.modules)){var e=function(){var e=this;e.body="",e.alert="",e.getAuthor="",e.insert="",e.update="",e.container=document.querySelector(".adminAuthors"),e.content=e.container.querySelector(".adminAuthors__content"),e.authorSelect=e.container.querySelector('.formSelect__select[name="author"]'),e.editTemplate=e.container.querySelector("#adminAuthors-template").innerHTML,e.setupListener=function(){e.authorSelect.addEventListener("change",e.handleState),e.container.addEventListener("click",e.router)},e.router=function(t){t.preventDefault();var n=t.target.dataset.action;n&&e[n]&&e[n]()},e.add=function(){e.insert("authors",{id:parseInt(e.container.querySelector('.formInput__input[name="id"]').value),title:e.container.querySelector('.formInput__input[name="title"]').value,description:e.container.querySelector('.formInput__input[name="description"]').value,photo:e.container.querySelector('.formInput__input[name="photo"]').value}).then(function(t){e.alert({title:"",text:t,type:"success"}),e.setupAuthorFilter(),e.setNewState()},function(t){e.alert({title:"",text:t,type:"error"})})},e.edit=function(){e.update("authors",{id:parseInt(e.container.querySelector('.formInput__input[name="id"]').value),title:e.container.querySelector('.formInput__input[name="title"]').value,description:e.container.querySelector('.formInput__input[name="description"]').value,photo:e.container.querySelector('.formInput__input[name="photo"]').value}).then(function(t){e.alert({title:"",text:t,type:"success"})},function(t){e.alert({title:"",text:t,type:"error"})})},e.remove=function(){confirm("Вы действительно хотите удалить выбранного лектора?")&&e["delete"]("authors",{id:parseInt(e.container.querySelector('.formInput__input[name="id"]').value),title:e.container.querySelector('.formInput__input[name="title"]').value,description:e.container.querySelector('.formInput__input[name="description"]').value,photo:e.container.querySelector('.formInput__input[name="photo"]').value}).then(function(t){e.alert({title:"",text:t,type:"success"}),e.setupAuthorFilter(),e.setNewState()},function(t){e.alert({title:"",text:t,type:"error"})})},e.setupAuthorFilter=function(){e.getAuthor().then(function(t){var n='<option value=""></option>';t.forEach(function(e){n+='<option value="'+e.id+'">'+e.title+"</option>"}),e.authorSelect.innerHTML=n})},e.handleState=function(){e.authorSelect.value?e.setEditState():e.setNewState()},e.setEditState=function(){var t=e.authorSelect.value?parseInt(e.authorSelect.value):"";e.getAuthor(t).then(function(t){var n=t[0],a=document.createElement("div");a.classList.add("adminAuthors__edit"),a.innerHTML=e.editTemplate,a.querySelector(".adminAuthors__title").style.display="none",a.querySelector('.formInput__input[name="id"]').value=n.id,a.querySelector('.formInput__input[name="title"]').value=n.title,a.querySelector('.formInput__input[name="description"]').value=n.description,a.querySelector('.formInput__input[name="photo"]').value=n.photo,a.querySelector(".adminAuthors__box__button_type_add").style.display="none",e.render(a)})},e.setNewState=function(){var t=document.createElement("div");t.classList.add("adminAuthors__add"),t.innerHTML=e.editTemplate,t.querySelector(".adminAuthors__box__col_1").style.display="none",t.querySelector(".adminAuthors__box__button_type_edit").style.display="none",t.querySelector(".adminAuthors__box__button_type_remove").style.display="none",e.render(t)},e.render=function(t){e.content.innerHTML="",e.content.appendChild(t)},e.importDefaults=function(){e.body=app.modules.main.body,e.alert=app.modules.admin.alert,e.getAuthor=app.modules.main.library.getAuthor,e.insert=app.modules.main.library.insert,e.update=app.modules.main.library.update,e["delete"]=app.modules.main.library["delete"]},e.init=function(){e.container&&(e.importDefaults(),e.setupAuthorFilter(),e.handleState(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.adminAuthors=new e}}(),function(){if(!("modules"in app&&"adminLectures"in app.modules)){var e=function(){var e=this;e.body="",e.alert="",e.getLecture="",e.getSchool="",e.getAuthor="",e.getPlace="",e.insert="",e.update="",e.container=document.querySelector(".adminLectures"),e.content=e.container.querySelector(".adminLectures__content"),e.lectureSelect=e.container.querySelector('.formSelect__select[name="lecture"]'),e.editTemplate=e.container.querySelector("#adminLectures-template").innerHTML,e.setupListener=function(){e.lectureSelect.addEventListener("change",e.handleState),e.container.addEventListener("click",e.router)},e.router=function(t){t.preventDefault();var n=t.target.dataset.action;n&&e[n]&&e[n]()},e.add=function(){e.insert("lectures",{id:parseInt(e.container.querySelector('.formInput__input[name="id"]').value),title:e.container.querySelector('.formInput__input[name="title"]').value,school:[].slice.call(e.container.querySelectorAll('.formSelect__select[name="school"] option:checked')).map(function(e){return parseInt(e.value)}),author:[].slice.call(e.container.querySelectorAll('.formSelect__select[name="author"] option:checked')).map(function(e){return parseInt(e.value)}),date:e.container.querySelector('.formInput__input[name="date"]').value,time:e.container.querySelector('.formInput__input[name="time"]').value,place:parseInt(e.container.querySelector('.formSelect__select[name="place"]').value),isOver:1===parseInt(e.container.querySelector('.formSelect__select[name="isOver"]').value),resources:e.container.querySelector('.formInput__input[name="resources"]').value}).then(function(t){e.alert({title:"",text:t,type:"success"}),e.setupLectureFilter(),e.setNewState()},function(t){e.alert({title:"",text:t,type:"error"})})},e.edit=function(){e.update("lectures",{id:parseInt(e.container.querySelector('.formInput__input[name="id"]').value),title:e.container.querySelector('.formInput__input[name="title"]').value,school:[].slice.call(e.container.querySelectorAll('.formSelect__select[name="school"] option:checked')).map(function(e){return parseInt(e.value)}),author:[].slice.call(e.container.querySelectorAll('.formSelect__select[name="author"] option:checked')).map(function(e){return parseInt(e.value)}),date:e.container.querySelector('.formInput__input[name="date"]').value,time:e.container.querySelector('.formInput__input[name="time"]').value,place:parseInt(e.container.querySelector('.formSelect__select[name="place"]').value),isOver:1===parseInt(e.container.querySelector('.formSelect__select[name="isOver"]').value),resources:e.container.querySelector('.formInput__input[name="resources"]').value}).then(function(t){e.alert({title:"",text:t,type:"success"})},function(t){e.alert({title:"",text:t,type:"error"})})},e.remove=function(){confirm("Вы действительно хотите удалить выбранную лекцию?")&&e["delete"]("lectures",{id:parseInt(e.container.querySelector('.formInput__input[name="id"]').value),title:e.container.querySelector('.formInput__input[name="title"]').value,school:[].slice.call(e.container.querySelectorAll('.formSelect__select[name="school"] option:checked')).map(function(e){return parseInt(e.value)}),author:[].slice.call(e.container.querySelectorAll('.formSelect__select[name="author"] option:checked')).map(function(e){return parseInt(e.value)}),date:e.container.querySelector('.formInput__input[name="date"]').value,time:e.container.querySelector('.formInput__input[name="time"]').value,place:parseInt(e.container.querySelector('.formSelect__select[name="place"]').value),isOver:1===parseInt(e.container.querySelector('.formSelect__select[name="isOver"]').value),resources:e.container.querySelector('.formInput__input[name="resources"]').value}).then(function(t){e.alert({title:"",text:t,type:"success"}),e.setupLectureFilter(),e.setNewState()},function(t){e.alert({title:"",text:t,type:"error"})})},e.setupLectureFilter=function(){e.getLecture().then(function(t){var n='<option value=""></option>';t.forEach(function(e){n+='<option value="'+e.id+'">'+e.title+"</option>"}),e.lectureSelect.innerHTML=n})},e.handleState=function(){e.lectureSelect.value?e.setEditState():e.setNewState()},e.setEditState=function(){var t=e.lectureSelect.value?parseInt(e.lectureSelect.value):"",n={};e.getSchool().then(function(t){return n.schools=t,e.getAuthor()}).then(function(t){return n.authors=t,e.getPlace()}).then(function(a){n.places=a,e.getLecture(t).then(function(t){n.response=t[0];var a=document.createElement("div");a.classList.add("adminLectures__edit"),a.innerHTML=e.editTemplate;var r="",o="",i="";n.schools.forEach(function(e){var t=n.response.school.indexOf(e.id)!==-1?"selected":"";r+="<option "+t+' value="'+e.id+'">'+e.title+" ("+e.student+" чел.)</option>"}),n.authors.forEach(function(e){var t=n.response.author.indexOf(e.id)!==-1?"selected":"";o+="<option "+t+' value="'+e.id+'">'+e.title+"</option>"}),n.places.forEach(function(e){var t=n.response.place===e.id?"selected":"";i+="<option "+t+' value="'+e.id+'">'+e.title+" (вместимость: "+e.capacity+" чел.)</option>"}),a.querySelector(".adminLectures__title").style.display="none",a.querySelector('.formInput__input[name="id"]').value=n.response.id,a.querySelector('.formInput__input[name="title"]').value=n.response.title,a.querySelector('.formSelect__select[name="school"]').innerHTML=r,a.querySelector('.formSelect__select[name="author"]').innerHTML=o,a.querySelector('.formInput__input[name="date"]').value=n.response.date,a.querySelector('.formInput__input[name="time"]').value=n.response.time,a.querySelector('.formSelect__select[name="place"]').innerHTML=i,a.querySelector('.formSelect__select[name="isOver"] option[value="'+(n.response.isOver?1:0)+'"]').selected=!0,a.querySelector('.formInput__input[name="resources"]').value=n.response.resources,a.querySelector(".adminLectures__box__button_type_add").style.display="none",e.render(a)})})},e.setNewState=function(){var t={};e.getSchool().then(function(n){return t.schools=n,e.getAuthor()}).then(function(n){return t.authors=n,e.getPlace()}).then(function(n){t.places=n;var a=document.createElement("div");a.classList.add("adminLectures__add"),a.innerHTML=e.editTemplate;var r="",o="",i="";t.schools.forEach(function(e){r+='<option value="'+e.id+'">'+e.title+" ("+e.student+" чел.)</option>"}),t.authors.forEach(function(e){o+='<option value="'+e.id+'">'+e.title+"</option>"}),t.places.forEach(function(e){i+='<option value="'+e.id+'">'+e.title+" (вместимость: "+e.capacity+" чел.)</option>"}),a.querySelector(".adminLectures__box__col_1").style.display="none",a.querySelector('.formSelect__select[name="school"]').innerHTML=r,a.querySelector('.formSelect__select[name="author"]').innerHTML=o,a.querySelector('.formSelect__select[name="place"]').innerHTML=i,a.querySelector(".adminLectures__box__button_type_edit").style.display="none",a.querySelector(".adminLectures__box__button_type_remove").style.display="none",e.render(a)})},e.render=function(t){e.content.innerHTML="",e.content.appendChild(t)},e.importDefaults=function(){e.body=app.modules.main.body,e.alert=app.modules.admin.alert,e.getLecture=app.modules.main.library.getLecture,e.getSchool=app.modules.main.library.getSchool,e.getAuthor=app.modules.main.library.getAuthor,e.getPlace=app.modules.main.library.getPlace,e.insert=app.modules.main.library.insert,e.update=app.modules.main.library.update,e["delete"]=app.modules.main.library["delete"]},e.init=function(){e.container&&(e.importDefaults(),e.setupLectureFilter(),e.handleState(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.adminLectures=new e}}(),function(){if(!("modules"in app&&"adminSchedule"in app.modules)){var e=function(){var e=this;e.body="",e.getSchedule="",e.getPlace="",e.getSchool="",e.getAuthor="",e.expand="",e.container=document.querySelector(".adminSchedule"),e.content=e.container.querySelector(".adminSchedule__content"),e.dateFromInput=e.container.querySelector('.formInput__input[name="from"]'),e.dateToInput=e.container.querySelector('.formInput__input[name="to"]'),e.placeSelect=e.container.querySelector('.formSelect__select[name="place"]'),e.template=e.container.querySelector("#adminSchedule-template").innerHTML,e.setupListener=function(){e.dateFromInput.addEventListener("change",e.getData),e.dateToInput.addEventListener("change",e.getData),e.placeSelect.addEventListener("change",e.getData)},e.setupPlaceFilter=function(){e.getPlace().then(function(t){var n='<option value=""></option>';t.forEach(function(e){n+='<option value="'+e.id+'">'+e.title+"</option>"}),e.placeSelect.innerHTML=n})},e.getData=function(){var t=e.dateFromInput.value.replace(/-/g,"/"),n=e.dateToInput.value.replace(/-/g,"/"),a=e.placeSelect.value?parseInt(e.placeSelect.value):"";e.getSchedule(t,n,a).then(function(t){e.render(t)})},e.render=function(t){var n=document.createElement("ul");n.classList.add("adminSchedule__list"),t.lectures.forEach(function(a){var r=document.createElement("li");r.classList.add("adminSchedule__item"),r.innerHTML=e.template,r.querySelector(".adminSchedule__box__name").innerHTML=a.title,r.querySelector(".adminSchedule__box__school").innerHTML+=e.expand(a.school,{title:"schools",data:t.schools}),r.querySelector(".adminSchedule__box__author").innerHTML+=e.expand(a.author,{title:"authors",data:t.authors}),r.querySelector(".adminSchedule__box__date").innerHTML+=a.date,r.querySelector(".adminSchedule__box__time").innerHTML+=a.time,r.querySelector(".adminSchedule__box__place").innerHTML+=e.expand([a.place],{title:"places",data:t.places}),r.querySelector(".adminSchedule__box__status").innerHTML+=a.isOver?"Лекция закончилась":"Лекция еще не закончилась",r.querySelector(".adminSchedule__box__resources a").href=a.resources,n.appendChild(r)}),e.content.innerHTML="",e.content.appendChild(n)},e.importDefaults=function(){e.body=app.modules.main.body,e.getSchedule=app.modules.main.library.getSchedule,e.getPlace=app.modules.main.library.getPlace,e.getSchool=app.modules.main.library.getSchool,e.getAuthor=app.modules.main.library.getAuthor,e.expand=app.modules.main.library.expand},e.init=function(){e.container&&(e.importDefaults(),e.setupPlaceFilter(),e.getData(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.adminSchedule=new e}}(),function(){if(!("modules"in app&&"adminPlaces"in app.modules)){var e=function(){var e=this;e.body="",e.alert="",e.getPlace="",e.insert="",e.update="",e.container=document.querySelector(".adminPlaces"),e.content=e.container.querySelector(".adminPlaces__content"),e.placeSelect=e.container.querySelector('.formSelect__select[name="place"]'),e.editTemplate=e.container.querySelector("#adminPlaces-template").innerHTML,e.setupListener=function(){e.placeSelect.addEventListener("change",e.handleState),e.container.addEventListener("click",e.router)},e.router=function(t){t.preventDefault();var n=t.target.dataset.action;n&&e[n]&&e[n]()},e.add=function(){e.insert("places",{id:parseInt(e.container.querySelector('.formInput__input[name="id"]').value),title:e.container.querySelector('.formInput__input[name="title"]').value,address:e.container.querySelector('.formInput__input[name="address"]').value,link:e.container.querySelector('.formInput__input[name="link"]').value,capacity:parseInt(e.container.querySelector('.formInput__input[name="capacity"]').value)}).then(function(t){e.alert({title:"",text:t,type:"success"}),e.setupPlaceFilter(),e.setNewState()},function(t){e.alert({title:"",text:t,type:"error"})})},e.edit=function(){e.update("places",{id:parseInt(e.container.querySelector('.formInput__input[name="id"]').value),title:e.container.querySelector('.formInput__input[name="title"]').value,address:e.container.querySelector('.formInput__input[name="address"]').value,link:e.container.querySelector('.formInput__input[name="link"]').value,capacity:parseInt(e.container.querySelector('.formInput__input[name="capacity"]').value)}).then(function(t){e.alert({title:"",text:t,type:"success"})},function(t){e.alert({title:"",text:t,type:"error"})})},e.remove=function(){confirm("Вы действительно хотите удалить выбранную аудиторию?")&&e["delete"]("places",{id:parseInt(e.container.querySelector('.formInput__input[name="id"]').value),title:e.container.querySelector('.formInput__input[name="title"]').value,address:e.container.querySelector('.formInput__input[name="address"]').value,link:e.container.querySelector('.formInput__input[name="link"]').value,capacity:parseInt(e.container.querySelector('.formInput__input[name="capacity"]').value)}).then(function(t){e.alert({title:"",text:t,type:"success"}),e.setupPlaceFilter(),e.setNewState()},function(t){e.alert({title:"",text:t,type:"error"})})},e.setupPlaceFilter=function(){e.getPlace().then(function(t){var n='<option value=""></option>';t.forEach(function(e){n+='<option value="'+e.id+'">'+e.title+"</option>"}),e.placeSelect.innerHTML=n})},e.handleState=function(){e.placeSelect.value?e.setEditState():e.setNewState()},e.setEditState=function(){var t=e.placeSelect.value?parseInt(e.placeSelect.value):"";e.getPlace(t).then(function(t){var n=t[0],a=document.createElement("div");a.classList.add("adminPlaces__edit"),a.innerHTML=e.editTemplate,a.querySelector(".adminPlaces__title").style.display="none",a.querySelector('.formInput__input[name="id"]').value=n.id,a.querySelector('.formInput__input[name="title"]').value=n.title,a.querySelector('.formInput__input[name="address"]').value=n.address,a.querySelector('.formInput__input[name="link"]').value=n.link,a.querySelector('.formInput__input[name="capacity"]').value=n.capacity,a.querySelector(".adminPlaces__box__button_type_add").style.display="none",e.render(a)})},e.setNewState=function(){e.getPlace().then(function(t){var n=document.createElement("div");n.classList.add("adminPlaces__add"),n.innerHTML=e.editTemplate,n.querySelector(".adminPlaces__box__col_1").style.display="none",n.querySelector(".adminPlaces__box__button_type_edit").style.display="none",n.querySelector(".adminPlaces__box__button_type_remove").style.display="none",e.render(n)})},e.render=function(t){e.content.innerHTML="",e.content.appendChild(t)},e.importDefaults=function(){e.body=app.modules.main.body,e.alert=app.modules.admin.alert,e.getPlace=app.modules.main.library.getPlace,e.insert=app.modules.main.library.insert,e.update=app.modules.main.library.update,e["delete"]=app.modules.main.library["delete"]},e.init=function(){e.container&&(e.importDefaults(),e.setupPlaceFilter(),e.handleState(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.adminPlaces=new e}}(),function(){if(!("modules"in app&&"adminSchools"in app.modules)){var e=function(){var e=this;e.body="",e.alert="",e.getSchool="",e.insert="",e.update="",e.container=document.querySelector(".adminSchools"),e.content=e.container.querySelector(".adminSchools__content"),e.schoolSelect=e.container.querySelector('.formSelect__select[name="school"]'),e.editTemplate=e.container.querySelector("#adminSchools-template").innerHTML,e.setupListener=function(){e.schoolSelect.addEventListener("change",e.handleState),e.container.addEventListener("click",e.router)},e.router=function(t){t.preventDefault();var n=t.target.dataset.action;n&&e[n]&&e[n]()},e.add=function(){e.insert("schools",{id:parseInt(e.container.querySelector('.formInput__input[name="id"]').value),title:e.container.querySelector('.formInput__input[name="title"]').value,student:parseInt(e.container.querySelector('.formInput__input[name="student"]').value)}).then(function(t){e.alert({title:"",text:t,type:"success"}),e.setupSchoolFilter(),e.setNewState()},function(t){e.alert({title:"",text:t,type:"error"})})},e.edit=function(){e.update("schools",{id:parseInt(e.container.querySelector('.formInput__input[name="id"]').value),title:e.container.querySelector('.formInput__input[name="title"]').value,student:parseInt(e.container.querySelector('.formInput__input[name="student"]').value)}).then(function(t){e.alert({title:"",text:t,type:"success"})},function(t){e.alert({title:"",text:t,type:"error"})})},e.remove=function(){confirm("Вы действительно хотите удалить выбранную школу?")&&e["delete"]("schools",{id:parseInt(e.container.querySelector('.formInput__input[name="id"]').value),title:e.container.querySelector('.formInput__input[name="title"]').value,student:parseInt(e.container.querySelector('.formInput__input[name="student"]').value)}).then(function(t){e.alert({title:"",text:t,type:"success"}),e.setupSchoolFilter(),e.setNewState()},function(t){e.alert({title:"",text:t,type:"error"})})},e.setupSchoolFilter=function(){e.getSchool().then(function(t){var n='<option value=""></option>';t.forEach(function(e){n+='<option value="'+e.id+'">'+e.title+"</option>"}),e.schoolSelect.innerHTML=n})},e.handleState=function(){e.schoolSelect.value?e.setEditState():e.setNewState()},e.setEditState=function(){var t=e.schoolSelect.value?parseInt(e.schoolSelect.value):"";e.getSchool(t).then(function(t){var n=t[0],a=document.createElement("div");a.classList.add("adminSchools__edit"),a.innerHTML=e.editTemplate,a.querySelector(".adminSchools__title").style.display="none",a.querySelector('.formInput__input[name="id"]').value=n.id,a.querySelector('.formInput__input[name="title"]').value=n.title,a.querySelector('.formInput__input[name="student"]').value=n.student,a.querySelector(".adminSchools__box__button_type_add").style.display="none",e.render(a)})},e.setNewState=function(){e.getSchool().then(function(t){var n=document.createElement("div");n.classList.add("adminSchools__add"),n.innerHTML=e.editTemplate,n.querySelector(".adminSchools__box__col_1").style.display="none",n.querySelector(".adminSchools__box__button_type_edit").style.display="none",n.querySelector(".adminSchools__box__button_type_remove").style.display="none",e.render(n)})},e.render=function(t){e.content.innerHTML="",e.content.appendChild(t)},e.importDefaults=function(){e.body=app.modules.main.body,e.alert=app.modules.admin.alert,e.getSchool=app.modules.main.library.getSchool,e.insert=app.modules.main.library.insert,e.update=app.modules.main.library.update,e["delete"]=app.modules.main.library["delete"]},e.init=function(){e.container&&(e.importDefaults(),e.setupSchoolFilter(),e.handleState(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.adminSchools=new e}}();var initApp=function(){if(!("modules"in app&&"main"in app.modules)){var e=function(){var e=this;e.html=document.querySelector("html"),e.body=document.querySelector("body"),e.modules=app.modules,e.library=new Library,e.initLibrary=function(){e.library.init()},e.initModules=function(){for(var t in e.modules)e.modules.hasOwnProperty(t)&&"undefined"!=typeof e.modules[t].init&&"main"!==t&&"library"!==t&&e.modules[t].init()},e.init=function(){e.initLibrary(),e.initModules()}};"modules"in app||(app.modules={}),app.modules.main=new e,app.modules.main.init()}};window.addEventListener("load",initApp),function(){if(!("modules"in app&&"modal"in app.modules)){var e=function(){var e=this;e.html="",e.body="",e.container=document.querySelector(".modal"),e.openButton=document.querySelector(".modal_trigger"),e.closeButton=document.querySelector(".modal_close"),e.setupListener=function(){e.body.addEventListener("click",e.router)},e.router=function(t){var n=t.target;n.classList.contains("modal_trigger")?(t.preventDefault(),e.open(t.target)):n.classList.contains("modal_close")&&(t.preventDefault(),e.close(t.target))},e.open=function(t){var n=t.getAttribute("href"),a=document.querySelector(n);e.html.classList.add("modal_state_open"),a.classList.add("modal_state_open")},e.close=function(t){var n=t.closest(".modal");n.classList.remove("modal_state_open"),e.html.classList.remove("modal_state_open")},e.importDefaults=function(){e.html=app.modules.main.html,e.body=app.modules.main.body},e.init=function(){e.container&&(e.importDefaults(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.modal=new e}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
